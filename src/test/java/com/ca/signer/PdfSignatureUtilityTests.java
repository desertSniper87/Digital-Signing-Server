package com.ca.signer;

import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Base64;
import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import com.ca.signer.model.PdfDocument;
import com.ca.signer.pdf.PdfSignatureHandler;
import com.ca.signer.utils.CertificateUtils;

@RunWith(SpringRunner.class)
@SpringBootTest
public class PdfSignatureUtilityTests {

	PdfDocument doc = new PdfDocument();

	@Test
	public void contextLoads() {
	}

	public void testHash() throws Exception {
		doc.setName("D:/temp/test1.pdf");
		doc.setPath("D:/temp/SamplePCC_empty_signed.pdf");
		// server
		PdfSignatureHandler.emptySignature(PdfSignatureHandler.getCertChains(), doc);
		PdfSignatureHandler.makeHash(PdfSignatureHandler.getCertChains(), doc);
	}

	public void testSign() throws Exception {
		byte[] hash = Base64.getDecoder().decode(doc.getDigest());

		System.out.println("hash: " + Arrays.toString(hash));

		byte[] signedEncoded = PdfSignatureHandler.signHash(hash);
		String base64EncodedSignedEncodedHash = Base64.getEncoder().encodeToString(signedEncoded);
		System.out.println(base64EncodedSignedEncodedHash);

		doc.setSignedEncoded(base64EncodedSignedEncodedHash);
	}

	@Test
	public void testCert() throws Exception {
		List<String> list = new ArrayList<String>();
		String test
		list.add(test);

		CertificateUtils.getCertListFromHexStrList(list);
	}

}
